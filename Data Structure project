/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package datastructurepro;

import java.util.*;

 class Node{
        
     
      String name, FirstDayOfWork, EmpAddress;
      int EmpID;
      double Salary, WorkHours;
      Node next;

     
     Node(int ID, String name, String firstDay, String Address, double workHours, double salary){
         EmpID = ID;
         this.name = name;
         FirstDayOfWork = firstDay;
         EmpAddress = Address;
         Salary = salary;
         WorkHours = workHours;
         next = null;
     }
     
 }

public class DataStructurePro {
    
    public static DataStructurePro e = new DataStructurePro();    
    public static Scanner l = new Scanner(System.in);
    static String name, FirstDayOfWork, EmpAddress;
    static int EmpID,count=0;
    static double WorkHours, Salary;
    public static int chose,choice,id;
    public static boolean again = true, error = false;
    private static Node head = null;
    
            boolean isEmpty(){
                return (head == null);
                }
        
           void insertEmpRec(int empid, String empname, String starteday, String address, double workhours, double salary){
               
            Node empRec = new Node(empid, empname, starteday, address, workhours, salary);
               
               if(checkEmpRec(empid)){
                   System.out.println("Sorry but employee with ID "+empid+ " already exist.");
                   menu();
               }
               else{
                   
                     if(head==null){
                         head=empRec;
                         return;
                     }
                     Node check = head;
                     while(check.next != null){
                         check = check.next;
                     }
                     check.next = empRec;
                    }
           }
           
        
         void showRec(){
            if (!isEmpty()){
            Node check = head;
            while(check != null){
                System.out.println("");
                System.out.println("Employee ID: "+check.EmpID
                +"\nName: "+check.name
                        +"\nStarted work in: "+check.FirstDayOfWork
                            +"\nAddress: "+check.EmpAddress
                                +"\nWorking Hours: "+check.WorkHours
                                    +"\nSalary: "+check.Salary);
                System.out.println("________________________________________________");
                check = check.next;
                }
            }
            else{
                System.out.println("No record exist!.");
            }
        }
         void deleteEmpRec(int empId){
            
            if (isEmpty()){
                System.out.println("No existing records!.");
            }
           
            else{
            Node check = head;
            Node preCheck = check;
            while (check.next != null && check.EmpID != empId){
                preCheck = check;
                check = check.next;
                }
            if (check.EmpID != empId){
                System.out.println("Sorry no such record with ID: "+empId+"!.");
                System.out.println("________________________________________________");
                }
            if(head.EmpID == empId){
                head = null;
                    }
            else{
                preCheck.next = check.next;
                System.out.println("Record with id: "+empId+" and name: "+check.name+" is deleted successfully");
                System.out.println("________________________________________________");
                }
            }
            
        }
        void updateEmpRec(int empId){
            Node check = head;
            if (!checkEmpRec(empId)){
                System.out.println("Sorry no such an employee with id: "+empId);
            return;
            }else{
                System.out.println("Enter employee name: ");
                    String empname = l.nextLine();
                    
                    System.out.println("Enter employee address: ");
                    String empaddress = l.nextLine();
                         
                    System.out.println("Enter the starting day: ");
                    String empstartday = l.nextLine();
                    
                    do{
                error = false;
                System.out.print("Enter employee salary: ");
                try{
                    Salary = l.nextDouble();
                }catch(InputMismatchException e){
                System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
                }
            }while(error);
            
            l.nextLine(); 
                       
                    do{
                error = false;
                System.out.print("Enter employee's working hours: ");
                try{
                    WorkHours = l.nextDouble();
                }catch(InputMismatchException e){
                System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
                }
            }while(error);
            
            l.nextLine();
                    
                    while(check != null){
                         if(check.EmpID == empId){
                             
                             check.name = empname;
                             check.EmpAddress = empaddress;
                             check.FirstDayOfWork = empstartday;
                             check.WorkHours = WorkHours;
                             check.Salary =Salary;                  
                         }
                         check = check.next;
                     }         
              }
               
            }
           
         void searchEmp(int id){
        Node check = head;
        if (checkEmpRec(id)&& (!isEmpty())){
            if(isEmpty())
                System.out.println("No records exists!.");
            else{
                  System.out.println("Employee ID: "+check.EmpID
                +"\nName: "+check.name
                        +"\nStarted work in: "+check.FirstDayOfWork
                            +"\nAddress: "+check.EmpAddress
                                +"\nWorking Hours: "+check.WorkHours
                                    +"\nSalary: "+check.Salary);
            
             }
        }
        else    
            System.out.println("******************Sorry no such record!.******************");
  
        }
         boolean checkEmpRec(int empId){
            Node check = head;
            if(head == null)
                return false;
            
            while (check != null && head != null){
                if (check.EmpID == empId){
                    return true;   
                }
                check = check.next;
            }
            return false;
        }
         void updateEmpSal(){
             
              if(head == null){
                return;
                    }
                Node check = head;
                while(check!=null){
                   if(check.WorkHours > 32){
                       check.Salary = check.Salary + (check.Salary*.02);

                   }
                   check = check.next;
               }
                System.out.println("Record updated successfully.");
         }
         void deleteAllRec(){
             if(isEmpty())
                 System.out.println("No record exist.");
             head = null;
         }
         boolean checkAllRec(){
             return (head == null);
         }
         
         
    public static void main(String[] args) {
        menu();
        byeMessage();
        authors();
 
    }

    private static void delete(){
        
        System.out.println("******************Delete menu******************");
        System.out.println("Enter 1 to delete specific record.");
        System.out.println("Enter 2 to delete all records.");
        System.out.println("******************-1 To exit.******************");
        
        do{
                    error = false;
                    System.out.print("Your choice is: ");
                try{
                    
                    chose = l.nextInt();
                    if(chose>2 && chose<1 && chose != -1)
                        System.out.println("Wrong input!.");
                }catch(InputMismatchException e){
                    System.out.println("Wrong input please enter number 1-2 or -1 to exit. ");
                    error = true;
                        l.nextLine();
                    }
                }while(error);
        
        
        if (chose == 1){
            System.out.println("*****************Notice there must be records!.*****************");
            
            do{
                error = false;
            System.out.print("Enter employee ID that you want to delete: ");
            try{
            id = l.nextInt();
            }catch(InputMismatchException e){
            System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
            }
            }while(error);
            
            l.nextLine();
            
            e.deleteEmpRec(id);
            count--;
        }
        if (chose == 2){
            e.deleteAllRec();
            if(!e.isEmpty())
            System.out.println("All records deleted successfully.");
        }
        if (chose == -1)
            menu();
        } 

    private static void records(){
        
        System.out.println("******************Record options******************");
        System.out.println("Enter 1 to search for specific employee record.");
        System.out.println("Enter 2 to check if record exist.");
        System.out.println("Enter 3 to edit exist employee record.");
        System.out.println("Enter 4 to upadate employees salary.");
        System.out.println("Enter 5 to print all records.");
        System.out.println("******************-1 To exit.******************");
        
        do{
                    error = false;
                    System.out.print("Your choice is: ");
                try{
                    
                    chose = l.nextInt();
                    if(chose>6 && chose<0 && chose != -1)
                        System.out.println("Wrong input!.");
                }catch(InputMismatchException e){
                    System.out.println("Wrong input please enter number 1-5 or -1 to exit. ");
                    error = true;
                        l.nextLine();
                    }
                }while(error);
        
        if (chose == 1){
            System.out.println("******************Sreacher******************");
            do{
                error = false;
            System.out.print("Enter employee id: ");
            try{
            id = l.nextInt();
            }catch(InputMismatchException e){
            System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
            }
            }while(error);
            
            l.nextLine();
            e.searchEmp(id);
        }
        if (chose == 2){
            
            System.out.println("******************Checker******************");
            do{
                error = false;
            System.out.print("Enter employee id: ");
            try{
            id = l.nextInt();
            }catch(InputMismatchException e){
            System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
            }
            }while(error);
            
            l.nextLine();
            
            if(e.checkEmpRec(id))
                System.out.println("There is such record.");
            else
                System.out.println("Sorry but no such record!.");
        }
        if (chose == 3){
        
            do{
                error = false;
            System.out.print("Enter employee ID that you want to update: ");
            try{
            id = l.nextInt();
            if(e.checkEmpRec(id)){
            }
            else{
                System.out.println("Sorry no such an employee with id: "+EmpID);
                menu();
                return;
            }
                
            }catch(InputMismatchException e){
            System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
            }
            }while(error);
            
            l.nextLine();
            
            e.updateEmpRec(id);
            menu();
        }
        if (chose == 4){
            
            e.updateEmpSal();
        }
        if (chose == 5){
            System.out.println("******************Show records******************");
            e.showRec();
        }
        if (chose == -1){
            menu();
        }
        
    }
    
    private static void byeMessage(){
      System.out.println("******************Have a good day :)*******************");
      
    }
    
    private static void menu() {
        while(again){
        System.out.println("******************Welcome******************");
        System.out.println("Enter 1 to create new employee record.");
        System.out.println("Enter 2 to view record options.");
        System.out.println("Enter 3 to delete an employee record.");
        System.out.println("******************-1 To exit.******************");
        
        
                do{
                    error = false;
                    System.out.print("Your choice is: ");
                try{
                    
                    chose = l.nextInt();
                    if(chose>6 && chose<0 && chose != -1)
                        System.out.println("Wrong input!.");
                }catch(InputMismatchException e){
                    System.out.println("Wrong input please enter number 1-3 or -1 to exit. ");
                    error = true;
                        l.nextLine();
                    }
                }while(error);

                  
        if (chose == 1){
            do{
            error = false;
            System.out.print("Enter employee ID: ");
            try{
            EmpID = l.nextInt();
            if(e.checkEmpRec(EmpID)){
                System.out.println("Sorry but employee with ID "+EmpID+ " already exist.");
                menu();
                return;
            }
            }catch (InputMismatchException e){
                System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
            }
            }while(error);
            
            l.nextLine();
            
            System.out.print("Enter employee name: ");
            name = l.nextLine();
            
            System.out.print("Enter employee address: ");
            EmpAddress = l.nextLine();
            
            System.out.print("Enter employee's first day of work: ");
            FirstDayOfWork = l.nextLine();
            do{
                error = false;
                System.out.print("Enter employee salary: ");
                try{
                    Salary = l.nextDouble();
                }catch(InputMismatchException e){
                System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
                }
            }while(error);
            
            l.nextLine();
            
            
            do{
                error = false;
                System.out.print("Enter employee's working hours: ");
                try{
                    WorkHours = l.nextDouble();
                }catch(InputMismatchException e){
                System.out.println("Enter numbers only!!.");
                error =true;
                l.nextLine();
                }
            }while(error);
            
            l.nextLine();
            
                                
            e.insertEmpRec(EmpID, name, FirstDayOfWork, EmpAddress, WorkHours, Salary);
            count++;
            System.out.println("Record with ID: "+EmpID+" added successfully and number of total recorcds is "+count+".");
            }
        if(chose == 2){
            if (!e.checkAllRec())
            records();
            else{
            System.out.println("There is no records, please create a record first!.");
            menu();
            return;
            }
        }
        if(chose == 3){
            if (!e.checkAllRec()){
              delete();
              System.out.println("Record with ID: "+EmpID+" is deleted successfully.");
              count--;
              return;
                }
            else{
            System.out.println("There is no records, please create a record first!.");
            menu();
            }
        }
        if (chose == -1){
            again = false;
                }
        
        }
        
    }
                
    
    
    public static void authors(){
    
        System.out.println("Made by:\n"
                + " Hosam Abbas Hddad 2140487.\n"
                + " Faris yousef tunkar 2040762.");
        System.out.println("*******************************************************");}

}
